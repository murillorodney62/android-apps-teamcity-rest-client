buildscript {
    ext.kotlin_version = '1.1.2-2'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}
plugins {
    id "com.jfrog.bintray" version "1.3.1"
}

apply plugin: 'java'
apply plugin: 'kotlin'

repositories {
    mavenCentral()
}

dependencies {
    compile "commons-codec:commons-codec:1.10"
    compile 'com.squareup.retrofit:retrofit:1.9.0'
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    compile 'org.slf4j:slf4j-api:1.7.12'

    testCompile 'junit:junit:4.12'
    testCompile 'org.slf4j:slf4j-log4j12:1.7.12'
}

group = 'org.teamcity.buildPipelines'
if (rootProject.hasProperty('teamcity')) {
    version = rootProject['teamcity']['build.number']
} else if (hasProperty("buildNumber")) {
    version = "$buildNumber"
} else {
    version = "SNAPSHOT"
}

apply plugin: 'maven-publish'
task sourceJar(type: Jar) {
    from sourceSets.main.kotlin
}
artifacts {
    archives sourceJar
}
publishing {

    if (version ==~ /([\d]+\.?)+/ ) {
        repositories {
            maven {
                // change to point to your repo, e.g. http://my.org/repo
                url "http://repo.labs.intellij.net/hackathon2017-teamcity-pipelines"
            }
        }
    }


    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourceJar {
                classifier "sources"
            }
        }
    }
}
if (hasProperty("bintrayUser")) {
    bintray {
        user = bintrayUser
        key = bintrayApiKey
        publish = true
        publications = ['mavenJava']
        pkg {
            userOrg = 'jetbrains'
            repo = "teamcity-rest-client"
            name = "teamcity-rest-client"
            version {
                name = "$buildNumber"
            }
        }
    }
}



task wrapper(type: Wrapper) {
    gradleVersion = '3.5'
}

